<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
    <title type="text">huzhongqing</title>
    <subtitle type="html"></subtitle>
    <updated>2020-01-17T10:29:04+08:00</updated>
    <id>http://www.huzhongqing.com/</id>
    <link rel="alternate" type="text/html" href="http://www.huzhongqing.com/" />
    <link rel="self" type="application/atom+xml" href="http://www.huzhongqing.com/atom.xml" />
    <author>
            <name>huzhongqing</name>
            <uri>http://www.huzhongqing.com/</uri>
            
                <email>zhongqing2016@qq.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    <generator uri="https://gohugo.io/" version="0.62.2">Hugo</generator>
        <entry>
            <title type="text">Golang-Gin WEB框架概述及分析目录</title>
            <link rel="alternate" type="text/html" href="http://www.huzhongqing.com/posts/gin/gin%E6%A6%82%E8%BF%B0%E5%8F%8A%E5%88%86%E6%9E%90%E7%9B%AE%E5%BD%95/" />
            <id>http://www.huzhongqing.com/posts/gin/gin%E6%A6%82%E8%BF%B0%E5%8F%8A%E5%88%86%E6%9E%90%E7%9B%AE%E5%BD%95/</id>
            <updated>2020-01-17T10:28:46+08:00</updated>
            <published>2020-01-17T09:18:52+08:00</published>
            <author>
                    <name>huzhongqing</name>
                    <uri>https://huzhongqing.com/</uri>
                    <email>zhongqing2016@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    
    <summary type="html"><![CDATA[善于回顾，走过的路，时长看看，说不定能发现更多的惊喜！ Gin WEB框架，从开源到至今都一……]]></summary>
            
                <content type="html"><![CDATA[<blockquote>
<p>善于回顾，走过的路，时长看看，说不定能发现更多的惊喜！</p>
</blockquote>
<p><strong><a href="https://github.com/gin-gonic/gin">Gin</a></strong> WEB框架，从开源到至今都一直秉承着简洁的设计理念，快！快！快！是它的代名称。简单，高效，灵活，是越来越多人喜欢它的理由。
Martini-like API风格，模块化设计，依赖注入带来使用便捷优势，修改过的httprouter带来高速的路由匹配性能优势。</p>
<h2 id="一gin能做什么v150">一、Gin能做什么（v1.5.0）</h2>
<p>Gin框架说实在的，在WEB开发过程中，做的东西其实不多，目前只专注于服务层，路由匹配，参数绑定/渲染，还有就是自定义中间件，这是它的核心功能。但是每一块功能就尽可能追求性能好，易用性高。</p>
<ol>
<li>启动HTTP(s)服务，快捷运行多服务，多监听端口，自定义HTTP配置等</li>
<li>快捷注册不同的路由请求方法，支持路由组，支持路径参数，参数获取方式多样。</li>
<li>支持多种绑定（Bind），包括路径参数，body(into structs)，HTML，Header，Multipart/Urlencoded 等。</li>
<li>支持多种渲染（Rendering）JSON，XML，YAML，JSONP，ProtoBuf，HTML</li>
<li>强大的中间件模块，提供默认的中间件，友好的中间件注入模式。</li>
<li>包装 http.Request 并提供多种快捷方法操作，Get/Set Cookie，Header，文件上传等。</li>
</ol>
<p>以上是我们用到的常用方法，不同于Beego的大而全，只专注于自己更擅长的事情，所以更轻量，上手更快！</p>
<h2 id="二分析目录">二、分析目录</h2>
<p>后续将对Gin框架的源码进行分析，并提供示例记录。尽可能理解清楚，为什么这样设计？为什么这样实现？为什么这样使用？以及当前版本的最佳实践。</p>
<h3 id="大模块分析顺序">大模块分析顺序</h3>
<ol>
<li>注册服务</li>
<li>注册路由</li>
<li>绑定参数</li>
<li>渲染数据</li>
<li>中间件实现</li>
<li>异常处理</li>
</ol>
<h2 id="三结语">三、结语</h2>
<p>使用Gin框架大概2年了，多数API项目都基于它构建，但是后期很少去跟进代码的Commit，以至于总感觉现在只用到了它的皮毛（虽然够用），但是还是想继续了解到深处，这样更有利于以后自己设计相关框架。并保持时刻记录分享的习惯。</p>
]]></content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="http://www.huzhongqing.com/categories/%E6%8A%80%E6%9C%AF%E7%AC%94%E8%AE%B0/" term="技术笔记" label="技术笔记" />
                            
                        
                    
                
                    
                
                    
                        
                            
                            
                            
                                <category scheme="http://www.huzhongqing.com/tags/golang/" term="golang" label="golang" />
                            
                        
                            
                            
                            
                                <category scheme="http://www.huzhongqing.com/tags/gin/" term="gin" label="gin" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">nas内网穿透</title>
            <link rel="alternate" type="text/html" href="http://www.huzhongqing.com/posts/other/nas%E7%BE%A4%E6%99%96%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%96%B9%E6%A1%88frp-ipv6/" />
            <id>http://www.huzhongqing.com/posts/other/nas%E7%BE%A4%E6%99%96%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%96%B9%E6%A1%88frp-ipv6/</id>
            <updated>2020-01-17T10:27:36+08:00</updated>
            <published>2020-01-16T13:05:48+08:00</published>
            <author>
                    <name>huzhongqing</name>
                    <uri>https://huzhongqing.com/</uri>
                    <email>zhongqing2016@qq.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights>
    
    <summary type="html"><![CDATA[nas(群晖)内网穿透方案(frp | ipv6) 介绍两种nas(群晖)两种内网穿透方案，解决黑……]]></summary>
            
                <content type="html"><![CDATA[<h2 id="nas群晖内网穿透方案frp--ipv6">nas(群晖)内网穿透方案(frp | ipv6)</h2>
<blockquote>
<p>介绍两种nas(群晖)两种内网穿透方案，解决黑群晖或者白群晖使用 QC 的相关问题。</p>
</blockquote>
<h3 id="基于ipv6实现点对点传输">基于ipv6实现，点对点传输</h3>
<p>优点：</p>
<ol>
<li>无需中转服务器。</li>
<li>点对点，家里有多大上行带宽一般就能跑慢</li>
</ol>
<p>缺点：</p>
<ol>
<li>需要ipv6设备支持。 双端设备都需支持，例如 手机、路由器。</li>
<li>在某些情况下，或者路由器等问题传输速度会很慢。</li>
<li>需要定时跑脚本更新nas机器的ipv6地址。</li>
</ol>
]]></content>
            
            
            
            
            
                
                    
                
                    
                
                    
                        
                            
                            
                            
                                <category scheme="http://www.huzhongqing.com/tags/nas/" term="nas" label="nas" />
                            
                        
                            
                            
                            
                                <category scheme="http://www.huzhongqing.com/tags/frp/" term="frp" label="frp" />
                            
                        
                            
                            
                            
                                <category scheme="http://www.huzhongqing.com/tags/ipv6/" term="ipv6" label="ipv6" />
                            
                        
                    
                
            
        </entry>
    
</feed>